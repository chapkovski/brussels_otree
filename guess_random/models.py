from otree.api import (
    models, widgets, BaseConstants, BaseSubsession, BaseGroup, BasePlayer,
    Currency as c, currency_range
)

# we import random library to generate a random number for the game

author = 'Philipp Chapkovski, chapkovski@gmail.com'

doc = """
Guess the random number game
"""


class Constants(BaseConstants):
    # ==============
    # oTree constants
    name_in_url = 'guess_random'
    players_per_group = None
    num_rounds = 1
    # ==============
    # game constants
    # we set an initial endowment as currency
    endowment = 100
    # we define two boundaries (upper and lower, between which the random number can fluctuate
    minguess = 0
    maxguess = 100
    filipp_constant = 444


class Subsession(BaseSubsession):
    pass


class Group(BaseGroup):
    pass


class Player(BasePlayer):
    age = models.IntegerField()
    # toguess variable is generated by a computer, but it still makes sense to set min and max so we can't
    # accidently generate something outside the boundaries
    toguess = models.IntegerField(min=Constants.minguess,
                                  max=Constants.maxguess,
                                  doc='random number for a player to guess')
    # that's where the player's input is stored. Verbose name is what is shown to the participant
    # when they are asked to make their decision
    guess = models.IntegerField()
    # the diff variable is not necessary but it is just convenient to store this value in a database for the future
    diff = models.IntegerField(doc='an absolute difference between player decision and number generated')

    # the method that we define here takes the number previously generated and the player's decision and
    # calculate an absolute difference, and subtract it from the endowment
    def set_payoff(self):
        self.diff = abs(self.guess - self.toguess)
        self.payoff = Constants.endowment - self.diff
